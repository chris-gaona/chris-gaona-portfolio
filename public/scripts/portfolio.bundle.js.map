{"version":3,"sources":["webpack:///./app.js","webpack:///./scripts/config/route-config.js","webpack:///./scripts/controllers/mainController.js","webpack:///./scripts/controllers/projectController.js","webpack:///./scripts/controllers/authController.js","webpack:///./scripts/directives/expandDirective.js","webpack:///./scripts/directives/mixItUpDirective.js","webpack:///./scripts/directives/owlDirective.js","webpack:///./scripts/directives/hamburgerDirective.js","webpack:///./scripts/directives/validation-errors.js","webpack:///./scripts/services/mainService.js","webpack:///./scripts/services/authService.js","webpack:///./scripts/services/userService.js","webpack:///./scripts/services/error-handler.js"],"names":[],"mappings":";;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;;;;;;;AC3DA;;AAEA;;AAEA;AACA;;AAEA,yBAAwB,sBAAsB,EAAE;;AAEhD;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC7HA;;AAEA;;AAEA;AACA;;AAEA,iBAAgB,+BAA+B,GAAG,6BAA6B;;AAE/E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACpFA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;;;;;;ACjDA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC7BA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC5BA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACrBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACxBA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AChCA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACpDA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5EA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;AClBA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"portfolio.bundle.js","sourcesContent":["'use strict';\n\nvar angular = require('angular');\n\nangular.module('app', ['ngRoute', 'duScroll', 'ngAnimate', 'toastr', '720kb.datepicker'])\n.run(function($rootScope, $location, AuthService) {\n  // wire up the route change start handler\n  // in order to determine if the requested route requires a user login\n  $rootScope.$on('$routeChangeStart', function(event, next, current) {\n    // if the \"require login\" property is set to \"true\"\n    // and we don't have an authenticated user...\n    // then send the user to the \"Sign In\" view.\n    if (next.requireLogin && !AuthService.isLoggedIn()) {\n      $location.path('/login');\n      event.preventDefault();\n    }\n  });\n}).config(function(toastrConfig) {\n  angular.extend(toastrConfig, {\n    containerId: 'toast-container',\n    positionClass: 'toast-bottom-right',\n    closeButton: true\n  });\n});\n\nrequire('./scripts/config/route-config.js');\nrequire('./scripts/controllers/mainController.js');\nrequire('./scripts/controllers/projectController.js');\nrequire('./scripts/controllers/authController.js');\nrequire('./scripts/directives/expandDirective.js');\nrequire('./scripts/directives/mixItUpDirective.js');\nrequire('./scripts/directives/owlDirective.js');\nrequire('./scripts/directives/hamburgerDirective.js');\nrequire('./scripts/directives/validation-errors.js');\nrequire('./scripts/services/mainService.js');\nrequire('./scripts/services/authService.js');\nrequire('./scripts/services/userService.js');\nrequire('./scripts/services/error-handler.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nangular.module('app')\n\n.config(config);\n\nfunction config ($routeProvider) {\n  $routeProvider\n  .when('/', {\n    controller: 'MainController',\n    controllerAs: 'vm',\n    templateUrl: 'templates/main.html',\n    resolve: {\n      projects: ['MainService', function (MainService) {\n        return MainService.getAll();\n      }]\n    }\n  })\n  .when('/new', {\n    controller: 'ProjectController',\n    controllerAs: 'vm',\n    templateUrl: 'templates/new-form.html',\n    requireLogin: true\n  })\n  .when('/edit/:id', {\n    controller: 'ProjectController',\n    controllerAs: 'vm',\n    templateUrl: 'templates/new-form.html',\n    requireLogin: true\n  })\n  .when('/register', {\n    controller: 'AuthController',\n    controllerAs: 'vm',\n    templateUrl: 'templates/authenticate.html',\n    resolve: {\n    check: ['$location', 'AuthService', function($location, AuthService) {\n        if (AuthService.isLoggedIn()) {\n          $location.path('/');\n        }\n      }]\n    }\n  })\n  .when('/login', {\n    controller: 'AuthController',\n    controllerAs: 'vm',\n    templateUrl: 'templates/authenticate.html',\n    resolve: {\n    check: ['$location', 'AuthService', function($location, AuthService) {\n        if (AuthService.isLoggedIn()) {\n          $location.path('/');\n        }\n      }]\n    }\n  })\n  .otherwise({\n    redirectTo: '/'\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/config/route-config.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction mainController ($location, $log, $timeout, MainService, AuthService, UserService, toastr, errorHandlerService) {\n  var vm = this;\n\n  $timeout(function () { twttr.widgets.load(); }, 500);\n\n  vm.isLoggedIn = AuthService.isLoggedIn();\n\n  if (vm.isLoggedIn) {\n    vm.currentUser = AuthService.currentUser();\n    UserService.getUser(vm.currentUser).then(function(res) {\n      vm.user = res.data;\n    });\n  }\n\n  vm.logOut = function () {\n    AuthService.logOut();\n    vm.isLoggedIn = false;\n    toastr.success('You are logged out', 'Success!');\n  };\n\n  vm.validationErrors = {};\n  vm.hasValidationErrors = false;\n\n  vm.projects = MainService.projects;\n\n  MainService.getTreehouse().then(function (response) {\n    vm.treehouse = response.data;\n  }, function (error) {\n    errorHandlerService.handleError(error);\n    // log the error to the console\n    $log.error('Error ' + error);\n  });\n\n  MainService.getCodeschool().then(function (response) {\n    vm.codeschool = response.data;\n  }, function (error) {\n    errorHandlerService.handleError(error);\n    // log the error to the console\n    $log.error('Error ' + error);\n  });\n\n  MainService.getGithub().then(function (response) {\n    vm.github = response.data;\n  }, function (error) {\n    errorHandlerService.handleError(error);\n    // log the error to the console\n    $log.error('Error ' + error);\n  });\n\n  //mixitup\n  var categories = [];\n  for (var i = 0; i < vm.projects.length; i++) {\n    categories.push(vm.projects[i].category);\n  }\n  var uniqueCat = categories.filter(function(elem, index, self) {\n    return index == self.indexOf(elem);\n  });\n\n  vm.categories = uniqueCat;\n\n  // vm.drawings = [{\n  //     name: 'Random Quote Generator',\n  //     value: 1,\n  //     category: 'Elements',\n  //     image: 'images/random-quote-generator.png',\n  //     created_on: 'July 23, 2016',\n  //     link: 'http://amazon.com',\n  //     github_link: 'https://github.com/chris-gaona/random-quote',\n  //     comments: 'Chris, great work on your Random Quotes Generator! You really went above and beyond to meet the Exceeds requirements. I hope you enjoyed this project and learn so much throughout the rest of the TechDegree. Keep pushing yourself for Exceeds! :)',\n  //     grade: 'Exceeds Expectations'\n  // }, {\n  //     name: 'Pagination Filter',\n  //     value: 2,\n  //     category: 'Elements',\n  //     image: 'images/pagination-filter.png',\n  //     created_on: 'September 5, 2015',\n  //     link: ''\n  // }, {\n  //     name: 'Interactive Form',\n  //     value: 3,\n  //     category: 'Elements',\n  //     image: 'images/interactive-form.png',\n  //     created_on: 'March 5, 2016',\n  //     link: ''\n  // }, {\n  //     name: 'Tic Tac Toe Game',\n  //     value: 4,\n  //     category: 'Soft',\n  //     image: 'images/tic-tac-toe.png',\n  //     created_on: 'April 10, 2016',\n  //     link: ''\n  // }, {\n  //     name: 'Movie Search',\n  //     value: 5,\n  //     category: 'Soft',\n  //     image: 'images/movie-search.png',\n  //     created_on: 'April 28, 2016',\n  //     link: ''\n  // }];\n\n  // vm.gradeOptions = ['Meets Expectations', 'Exceeds Expectations'];\n\n  vm.expandProject = false;\n\n  vm.getProject = function (project) {\n    vm.chosenProject = project;\n\n    // modalShown variable is toggled between true & false\n    vm.expandProject = !vm.expandProject;\n  };\n\n  vm.newProject = function () {\n    $location.path('/new');\n  };\n\n  vm.editProject = function (id) {\n    $location.path('/edit/' + id);\n  };\n}\n\nangular.module('app')\n.controller('MainController', ['$location', '$log', '$timeout', 'MainService', 'AuthService', 'UserService', 'toastr', 'errorHandlerService', mainController]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/controllers/mainController.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction projectController ($routeParams, $location, $log, MainService, toastr, errorHandlerService) {\n  var vm = this;\n\n  vm.grades = [{ name: 'Exceeds Expectations' }, { name: 'Meets Expectations' }];\n\n  if ($routeParams.id) {\n    MainService.getOne($routeParams.id)\n    .then(function (response) {\n      vm.project = response.data;\n\n      var project = response.data;\n      vm.name = project.name;\n      vm.category = project.category;\n      vm.image = project.image;\n      var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var date = new Date(project.created_on);\n      var newDate = monthNames[date.getMonth()] + ' ' +  date.getDate() + ', ' + date.getFullYear();\n      vm.created_on = newDate;\n      vm.link = project.link;\n      vm.github_link = project.github_link;\n      vm.comments = project.comments;\n      vm.treehouse_comments = project.treehouse_comments;\n      vm.grade = project.grade;\n    }, function (err) {\n      errorHandlerService.handleError(err);\n      // log the error to the console\n      $log.error('Error ' + err);\n    });\n  }\n\n  vm.saveProject = function () {\n    var projectObject = {};\n    projectObject.name = vm.name;\n    projectObject.category = vm.category;\n    projectObject.image = vm.image;\n    projectObject.created_on = vm.created_on;\n    projectObject.link = vm.link;\n    projectObject.github_link = vm.github_link;\n    projectObject.comments = vm.comments;\n    projectObject.treehouse_comments = vm.treehouse_comments;\n    projectObject.grade = vm.grade;\n\n    if ($routeParams.id) {\n      MainService.edit($routeParams.id, projectObject)\n      .then(function (project) {\n        $location.path('/');\n        toastr.success('Updated your project', 'Success!');\n        $log.log('Updated!');\n      }, function (err) {\n        errorHandlerService.handleError(err, displayValidationErrors);\n        // log the error to the console\n        $log.error('Error ' + err);\n      });\n    } else {\n      MainService.create(projectObject)\n      .then(function (project) {\n        toastr.success('Created your new project', 'Success!');\n        $location.path('/');\n        $log.log('Created!');\n      }, function (err) {\n        $log.log(err);\n        errorHandlerService.handleError(err, displayValidationErrors);\n        // log the error to the console\n        $log.error('Error ' + err);\n      });\n    }\n  };\n\n  vm.goBack = function () {\n    $location.path('/');\n  };\n\n  function displayValidationErrors(validationErrors) {\n    vm.validationErrors = validationErrors.errors;\n    $log.log(vm.validationErrors);\n    vm.hasValidationErrors = true;\n  }\n}\n\nangular.module('app')\n.controller('ProjectController', ['$routeParams', '$location', '$log', 'MainService', 'toastr', 'errorHandlerService', projectController]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/controllers/projectController.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction authController ($location, $log, MainService, AuthService, toastr, errorHandlerService) {\n  var vm = this;\n\n  vm.goBack = function () {\n    $location.path('/');\n  };\n\n  vm.registerPage = function () {\n    $location.path('/register');\n  };\n\n  vm.loginPage = function () {\n    $location.path('/login');\n  };\n\n  if ($location.path() === '/register') {\n    vm.register = 'Register';\n  } else {\n    vm.login = 'Login';\n  }\n\n  vm.registerUser = function() {\n    AuthService.register(vm.user).error(function(error) {\n      vm.error = error;\n      toastr.error('Please see above', 'Form Errors!');\n      $log.log(error);\n    }).then(function() {\n      toastr.success('Please see above', 'Form Errors!');\n      $location.path('/');\n    });\n  };\n\n  vm.loginUser = function() {\n    AuthService.logIn(vm.user).error(function(error) {\n      vm.error = error;\n      toastr.error('Please see above', 'Form Errors!');\n      $log.log(vm.error);\n    }).then(function() {\n      toastr.success('You are logged in', 'Success!');\n      $location.path('/');\n    });\n  };\n}\n\nangular.module('app')\n.controller('AuthController', ['$location', '$log', 'MainService', 'AuthService', 'toastr', 'errorHandlerService', authController]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/controllers/authController.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction expandProjectDirective () {\n  return {\n    // restrict to element only\n    restrict: 'E',\n    // adds scope with show set to = to make it able to be\n    // changed from the controller, & directive\n    scope: {\n      show: '=',\n      project: '='\n    },\n    // replace: true, // Replace with the template below\n    // transclude: true, // I want to insert custom content inside the directive\n    link: function (scope, element, attrs) {\n      // if hideModal button is clicked set show to false\n      // to remove the modal window\n      scope.collapseProject = function () {\n        scope.show = false;\n      };\n    },\n    // adds template url for modal\n    templateUrl: '../templates/expand-project.html' // See below\n  };\n}\n\nangular.module('app')\n.directive('expandProject', expandProjectDirective);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/directives/expandDirective.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction mixItUpDirective () {\n  return {\n    // restrict to element only\n    restrict: 'E',\n    scope:{\n      entities: '=',\n      itemClick: '&',\n      editButton: '&',\n      loggedIn: '='\n    },\n    // replace: true, // Replace with the template below\n    // transclude: true, // I want to insert custom content inside the directive\n    link: function (scope, element, attrs) {\n      scope.$watch('entities', function(){\n        $(element).mixItUp();\n        // how to tell mixitup to reload the data\n      });\n    },\n    // adds template url for modal\n    templateUrl: '../templates/mixitup.html'\n  };\n}\n\nangular.module('app')\n.directive('mixitup', mixItUpDirective);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/directives/mixItUpDirective.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction owlDirective () {\n  return {\n    // restrict to element only\n    restrict: 'E',\n    // replace: true, // Replace with the template below\n    // transclude: true, // I want to insert custom content inside the directive\n    link: function (scope, element, attrs) {\n      var options = scope.$eval($(element).attr('data-options'));\n\n      $(element).owlCarousel(options);\n    },\n    // adds template url for modal\n    templateUrl: '../templates/owl-carousel.html' // See below\n  };\n}\n\nangular.module('app')\n.directive('owlCarousel', owlDirective);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/directives/owlDirective.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction hamburgerDirective () {\n  return {\n    // restrict to element only\n    restrict: 'E',\n    // adds scope with show set to = to make it able to be\n    // changed from the controller, & directive\n    scope: {\n      variable: '='\n    },\n    // replace: true, // Replace with the template below\n    // transclude: true, // I want to insert custom content inside the directive\n    link: function (scope, element, attrs) {\n\n    },\n    // adds template url for modal\n    templateUrl: '../templates/hamburger.html' // See below\n  };\n}\n\nangular.module('app')\n.directive('hamburger', hamburgerDirective);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/directives/hamburgerDirective.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction ValidationErrors() {\n  var controller = ['$scope', function($scope) {\n    $scope.$watch('errors', function(newValue, oldValue) {\n      var errorsToDisplay = [];\n\n      if (newValue) {\n        for (var key in newValue) {\n          if (newValue.hasOwnProperty(key)) {\n            errorsToDisplay = errorsToDisplay.concat(newValue[key]);\n          }\n        }\n      }\n\n      $scope.errorsToDisplay = errorsToDisplay;\n    });\n  }];\n\n  return {\n    restrict: 'E',\n    scope: {\n      errors: '='\n    },\n    controller: controller,\n    templateUrl: '../templates/validation-errors.html'\n  };\n}\n\nangular.module('app')\n.directive('validationErrors', ValidationErrors);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/directives/validation-errors.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction mainService ($http) {\n  var mainService = {\n    projects: []\n  };\n\n  // get project info from mongodb\n  mainService.getAll = function () {\n    return $http.get('/api/projects').then(function successCallback (response) {\n      angular.copy(response.data, mainService.projects);\n    }, function errorCallback (response, status) {\n      $log.error('Error ' + response + status);\n    });\n  };\n\n  // get an existing project\n  mainService.getOne = function (id) {\n    return $http.get('/api/project/' + id);\n  };\n\n  // create a new project\n  mainService.create = function (project) {\n    return $http.post('/api/new', project);\n  };\n\n  // edit existing project\n  mainService.edit = function (id, project) {\n    return $http.put('/api/edit/' + id, project);\n  };\n\n  // get treehouse info\n  mainService.getTreehouse = function () {\n    return $http.get('/api/treehouse');\n  };\n\n  // get codeschool info\n  mainService.getCodeschool = function () {\n    return $http.get('/api/codeschool');\n  };\n\n  // get github info\n  mainService.getGithub = function () {\n    return $http.get('/api/github');\n  };\n\n  return mainService;\n}\n\nangular.module('app')\n.factory('MainService', ['$http', mainService]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/services/mainService.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction authService($http, $window, $log) {\n  var authService = {};\n\n  //save token in local storage\n  authService.saveToken = function(token) {\n    $window.localStorage['chris-portfolio-token'] = token;\n  };\n\n  //get token from local storage\n  authService.getToken = function(token) {\n    return $window.localStorage['chris-portfolio-token'];\n  };\n\n  //return a boolean value for if the user is logged in\n  authService.isLoggedIn = function() {\n    var token = authService.getToken();\n\n    if(token){\n      var payload = JSON.parse($window.atob(token.split('.')[1]));\n\n      return payload.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  };\n\n  //function currentUser() that returns the username of the user that's logged in\n  authService.currentUser = function() {\n    if(authService.isLoggedIn()){\n      var token = authService.getToken();\n      var payload = JSON.parse($window.atob(token.split('.')[1]));\n\n      return payload.username;\n    }\n  };\n\n  authService.currentUserId = function() {\n    if (authService.isLoggedIn()) {\n      var token = authService.getToken();\n      var payload = JSON.parse($window.atob(token.split('.')[1]));\n\n      return payload._id;\n    }\n  };\n\n  //register function that posts a user to our /register route and saves the token returned\n  authService.register = function(user) {\n    return $http.post('/register', user).success(function(data){\n      authService.saveToken(data.token);\n    });\n  };\n\n  // login function that posts a user to our /login route and saves the token returned\n  authService.logIn = function(user) {\n    return $http.post('/login', user).success(function(data){\n      authService.saveToken(data.token);\n    });\n  };\n\n  //logout function that removes the user's token from localStorage, logging the user out.\n  authService.logOut = function() {\n    $window.localStorage.removeItem('chris-portfolio-token');\n  };\n\n  return authService;\n}\n\n//--------------------------------------\n//ANGULAR\n//--------------------------------------\nangular.module('app')\n//create initial auth factory. We'll need to inject $http for interfacing with our server, and $window for interfacing with localStorage\n.factory('AuthService', ['$http', '$window', '$log', authService]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/services/authService.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction userService($http, AuthService) {\n  var userService = {};\n\n  userService.getUser = function(username) {\n    return $http.get('/user/' + username, {\n      headers: {Authorization: 'Bearer '+AuthService.getToken()}\n    });\n  };\n\n  //can't forget this return!!!\n  return userService;\n}\n\nangular.module('app')\n.factory('UserService', ['$http', 'AuthService', userService]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/services/userService.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction ErrorHandler(toastr, $log) {\n  var vm = this;\n\n  vm.handleError = function(response, displayValidationErrorsCallback) {\n    if (response.status === 400 && displayValidationErrorsCallback) {\n      toastr.error('Please see above', 'Form Errors!');\n      displayValidationErrorsCallback(response.data);\n    } else {\n      var message = response && response.data && response.data.message;\n      if (!message) {\n        message = 'Message not available. Please see the console for more details.';\n      }\n      toastr.error(message, 'Unexpected Error');\n\n      // log the entire response to the console\n      $log.error(response);\n    }\n  };\n}\n\nangular.module('app')\n.service('errorHandlerService', ErrorHandler);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/services/error-handler.js\n ** module id = 15\n ** module chunks = 0\n **/"],"sourceRoot":""}